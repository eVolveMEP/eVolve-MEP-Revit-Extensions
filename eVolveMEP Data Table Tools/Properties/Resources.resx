<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SerializedDataTableFiles" xml:space="preserve">
    <value>Serialized Data Table Files</value>
  </data>
  <data name="ToolsButtonText" xml:space="preserve">
    <value>Data Table
Tools</value>
  </data>
  <data name="ExternalTablesToolTipText" xml:space="preserve">
    <value>Setup and configuration for {0} Data Tables which are sourced externally.</value>
  </data>
  <data name="SettingsSaveErrorNotice" xml:space="preserve">
    <value>Could not save settings file:</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Settings_20x20" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Settings_20x20.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Help_Medium_20x20" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Help_Medium_20x20.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="SQLImportConfirmationPrompt" xml:space="preserve">
    <value>Warning: This operation will completely overwrite the structure and contents the selected {0} and rebuild with the {1} selections.

Would you like to continue?</value>
  </data>
  <data name="FileSaveFailure" xml:space="preserve">
    <value>Save Failure</value>
  </data>
  <data name="OperationCompleted" xml:space="preserve">
    <value>Process completed.</value>
  </data>
  <data name="ViewTableToolTipText" xml:space="preserve">
    <value>Opens a read-only dialog for viewing the contents of {0} Data Tables.</value>
  </data>
  <data name="ColumnInfoName_DataType" xml:space="preserve">
    <value>Data Type</value>
  </data>
  <data name="ResetSelectedDataTableConfigPrompt" xml:space="preserve">
    <value>Delete saved configuration for the selected {0}?</value>
  </data>
  <data name="NoValueSelectedError" xml:space="preserve">
    <value>No {0} is selected.</value>
  </data>
  <data name="ReadingExcelFileError" xml:space="preserve">
    <value>There was an error reading from the Excel file.
If this file is currently open, please close it and try again.</value>
  </data>
  <data name="Connected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="ValueMustBeProvided1Error" xml:space="preserve">
    <value>A value must be provided for '{0}'.</value>
  </data>
  <data name="ColumnInfoName_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ViewTableButtonText" xml:space="preserve">
    <value>View
Data Table</value>
  </data>
  <data name="OperationCancelsOnErrorNotice" xml:space="preserve">
    <value>If this produces an error, the operation will cancel.</value>
  </data>
  <data name="ViewSourceCodeOnGitHub" xml:space="preserve">
    <value>View source code on GitHub</value>
  </data>
  <data name="ValueMustBeProvided3Error" xml:space="preserve">
    <value>A value must be provided for '{0}', '{1}' and '{2}'.</value>
  </data>
  <data name="NoEntriesDefinedError" xml:space="preserve">
    <value>No {0} entries are defined.</value>
  </data>
  <data name="CouldNotConvertValueWarning" xml:space="preserve">
    <value>One or more values were not able to be converted to the target type.
The default value of "{0}" was set as the data in these rows.

This operation can be undone by using the Undo function within Revit.</value>
  </data>
  <data name="eVolveMechanical" xml:space="preserve">
    <value>eVolve Mechanical</value>
  </data>
  <data name="ImportStatementPromptInfo" xml:space="preserve">
    <value>Enter the SQL Select statement which will be used to populate the selected {0}. The SQL results will be used to define the column names and their respective data type.</value>
  </data>
  <data name="CopyDataTableToolTipText" xml:space="preserve">
    <value>Creates copies of existing {0} Data Table.</value>
  </data>
  <data name="eVolveElectrical" xml:space="preserve">
    <value>eVolve Electrical</value>
  </data>
  <data name="NotConnected" xml:space="preserve">
    <value>Not connected</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="ColumnInfoName_Expression" xml:space="preserve">
    <value>Expression</value>
    <comment>Formula expression, ex. Col1+Col2</comment>
  </data>
  <data name="StatementToRunPriorToImport" xml:space="preserve">
    <value>Enter the SQL statement to execute prior to importing data.</value>
  </data>
  <data name="ToolsToolTipText" xml:space="preserve">
    <value>Advanced tools for working with {0} Data Tables.</value>
    <comment>Tag is a product name</comment>
  </data>
  <data name="ExcelFiles" xml:space="preserve">
    <value>Excel Files</value>
  </data>
  <data name="ResetEntireConfigPrompt" xml:space="preserve">
    <value>Warning: This will delete ALL saved configuration data.
Would you like to continue?</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="ColumnInfoName_Order" xml:space="preserve">
    <value>Order</value>
    <comment>Sequential order</comment>
  </data>
  <data name="ReadingDataTableError" xml:space="preserve">
    <value>There was an error reading the data.</value>
  </data>
  <data name="ValueMustBeProvided2Error" xml:space="preserve">
    <value>A value must be provided for '{0}' and '{1}'.</value>
  </data>
  <data name="CsvFiles" xml:space="preserve">
    <value>CSV Files</value>
  </data>
  <data name="ExportColumnNotFoundError" xml:space="preserve">
    <value>The column '{0}' was not found in {1} '{2}'.</value>
  </data>
  <data name="Logo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Logo.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ExcelFileNotFoundError" xml:space="preserve">
    <value>The specified Excel file could not be found.</value>
  </data>
  <data name="FileLoadFailure" xml:space="preserve">
    <value>Load Failure</value>
  </data>
  <data name="ValueMustBeProvidedWhenEnabledError" xml:space="preserve">
    <value>A value must be provided for '{0}' when enabled.</value>
  </data>
  <data name="StatementToRunAfterImport" xml:space="preserve">
    <value>Enter the SQL statement to execute after importing data.</value>
  </data>
  <data name="ExternalTablesButtonText" xml:space="preserve">
    <value>External Tables
Configuration</value>
  </data>
  <data name="CopyDataTableButtonText" xml:space="preserve">
    <value>Copy
Data Table</value>
  </data>
  <data name="SettingsLoadErrorNotice" xml:space="preserve">
    <value>Could not load settings file:</value>
  </data>
  <data name="LinkedVideo_20x20" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\LinkedVideo_20x20.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>